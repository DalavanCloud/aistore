openapi: "3.0.0"
info:
  version: "1.1.0"
  title: AIS
  description: "AIStore is a scalable object-storage based caching system with Amazon and Google Cloud backends."
  termsOfService: ""
  contact:
    name: "NVIDIA-AIS"
    email: "dfcdev@exchange.nvidia.com"
    url: "https://github.com/NVIDIA/aistore"
  license:
    name: MIT
    url: https://github.com/NVIDIA/aistore/blob/master/LICENSE
tags:
  - name: Object
    description: All APIs to interact with AIS objects
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Bucket
    description: All APIs to interact with AIS buckets
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Cluster
    description: All APIs to perform operations on the AIS cluster
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Daemon
    description: All APIs to perform operations on individual AIS daemons
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Sort
    description: All APIs to interact with DSort operation
    externalDocs:
      url: https://github.com/NVIDIA/aistore/dsort
servers:
  - url: http://localhost:8080/v1
paths:
  /objects/{bucket-name}/{object-name}:
    get:
      summary: Get object
      operationId: get
      tags:
        - Object
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: object-name
          in: path
          description: Object name
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: Starting byte from where the read needs to be performed
          schema:
            type: integer
            format: int64
        - name: length
          in: query
          description: Number of bytes that need to be returned starting from the offset
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Object at the location bucket-name/object-name
          headers:
            ObjCksumType:
              schema:
                type: string
            ObjCksumVal:
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: byte
        '301':
          description: "Permanent HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Put object
      operationId: put
      tags:
        - Object
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: object-name
          in: path
          description: Object name
          required: true
          schema:
            type: string
        - name: from_id
          in: query
          description: Source target ID
          schema:
            type: string
        - name: to_id
          in: query
          description: Destination target ID
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object at the location bucket-name/object-name put successfully
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete object
      operationId: delete
      tags:
        - Object
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: object-name
          in: path
          description: Object name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Object at the location bucket-name/object-name deleted successfully
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: Perform operations on object such as rename
      operationId: performOperation
      tags:
        - Object
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: object-name
          in: path
          description: Object name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on bucket-name/object-name succeeded
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    head:
      summary: Query object properties
      operationId: getProperties
      tags:
        - Object
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: object-name
          in: path
          description: Object name
          required: true
          schema:
            type: string
        - name: check_cached
          in: query
          description: Check if the object is cached
          schema:
            type: boolean
      responses:
        '200':
          description: Properties of the object at the location bucket-name/object-name
          headers:
            CloudProvider:
              schema:
                type: string
            Size:
              schema:
                type: integer
                format: int32
            Version:
              schema:
                type: string
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /buckets/*:
    get:
      summary: Get bucket names
      operationId: listNames
      tags:
        - Bucket
      parameters:
        - name: loc
          in: query
          description: Get only local bucket names
          schema:
            type: boolean
      responses:
        '200':
          description: Cloud and local bucket names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketNames'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /buckets/{bucket-name}:
    put:
      summary: Set bucket properties
      operationId: setProperties
      tags:
        - Bucket
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
        - name: cloud_provider
          in: query
          description: Bucket's cloud provider
          schema:
            type: string
        - name: next_tier_url
          in: query
          description: URL for the next tier
          schema:
            type: string
        - name: read_policy
          in: query
          description: Policy which defines how to perform reads in case of more tiers
          schema:
            $ref: '#/components/schemas/RWPolicy'
        - name: write_policy
          in: query
          description: Policy which defines how to perform writes in case of more tiers
          schema:
            $ref: '#/components/schemas/RWPolicy'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Bucket properties set successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: Perform operations on bucket such as create
      operationId: performOperation
      tags:
        - Bucket
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on bucket-name succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectPropertyList'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete operations on bucket and its contained objects
      operationId: delete
      tags:
        - Bucket
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Bucket-name deleted successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    head:
      summary: Query bucket properties
      operationId: getProperties
      tags:
        - Bucket
      parameters:
        - name: bucket-name
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Properties of bucket-name
          headers:
            CloudProvider:
              schema:
                type: string
            Versioning:
              schema:
                type: string
            NextTierURL:
              schema:
                type: string
            ReadPolicy:
              schema:
                type: string
            WritePolicy:
              schema:
                type: string
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /cluster/:
    get:
      summary: Get cluster related details
      operationId: get
      tags:
        - Cluster
      parameters:
        - name: what
          in: query
          description: Cluster details which need to be fetched
          required: true
          schema:
            $ref: '#/components/schemas/GetWhat'
        - name: props
          in: query
          description: Additional properties describing the cluster details
          schema:
            $ref: '#/components/schemas/GetProps'
      responses:
        '200':
          description: Requested cluster details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/RebalanceClusterStatistics'
                  - $ref: '#/components/schemas/PrefetchClusterStatistics'
                  - $ref: '#/components/schemas/ClusterStatistics'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Perform cluster wide operations such as setting config value, shutting down proxy/target etc.
      operationId: performOperation
      tags:
        - Cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Cluster operation triggered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /cluster/register/:
    post:
      summary: Register storage target
      operationId: registerTarget
      tags:
        - Cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snode'
      responses:
        '200':
          description: Target registered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /cluster/daemon/{daemonId}:
    delete:
      summary: Unregister the storage target
      operationId: unregisterTarget
      tags:
        - Cluster
      parameters:
        - name: daemonId
          in: path
          description: ID of the target daemon
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Storage target unregistered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /cluster/proxy/{primary-proxy-id}:
    put:
      summary: Set primary proxy
      operationId: setPrimaryProxy
      tags:
        - Cluster
      parameters:
        - name: primary-proxy-id
          in: path
          description: Bucket name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Primary proxy set successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /daemon/:
    get:
      summary: Get daemon related details
      operationId: get
      tags:
        - Daemon
      parameters:
        - name: what
          in: query
          description: Daemon details which needs to be fetched
          required: true
          schema:
            $ref: '#/components/schemas/GetWhat'
      responses:
        '200':
          description: Requested daemon details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ClusterMap'
                  - $ref: '#/components/schemas/TargetStatistics'
                  - $ref: '#/components/schemas/DaemonConfiguration'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Perform operations such as setting config value, shutting down proxy/target etc. on a AIS daemon
      operationId: performOperation
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /daemon/mountpaths:
    post:
      summary: Perform operations on mountpath such as disable and enable
      operationId: modifyMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        '204':
          description: Return status if the mountpath was already enabled or disabled
        '404':
          description: Return status if the mountpath was not found
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: Create mountpath on target
      operationId: createMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Remove mountpath from target
      operationId: removeMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /sort/start:
    post:
      summary: Starts distributed sort operation on cluster
      operationId: startSort
      tags:
        - Sort
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortSpec'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: uuid
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
                format: uuid
  /sort/metrics/{sort-uuid}:
    get:
      summary: Get metrics of given sort operation
      operationId: getSortMetrics
      tags:
        - Sort
      parameters:
        - name: sort-uuid
          in: path
          description: Sort uuid which is returned when starting dsort
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapOfMetrics'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /sort/abort/{sort-uuid}:
    delete:
      summary: Abort distributed sort operation
      operationId: abortSort
      tags:
        - Sort
      parameters:
        - name: sort-uuid
          in: path
          description: Sort uuid which is returned when starting dsort
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Operation was successfully aborted
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /download:
    delete:
      summary: Cancel a previous download request
      operationId: downloadCancel
      tags:
        - Download
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAdmin'
      responses:
        '200':
          description: Download cancel request was successfully added to the download manager.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Download cancel request failed, file already finished downloaded.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    get:
        summary: Get the download status of a previously requested download. 
        operationId: downloadStatus
        tags:
          - Download
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAdmin'
        responses:
          '200':
            description: Current status and progress if it is currently being downloaded.
            content:
              text/plain:
                schema:
                  type: string
          default:
            description: An unexpected error was encountered
            content:
              text/plain:
                schema:
                  type: string
  /download/single:
    post:
      summary: Queues a single object to be downloaded by AIS.
      operationId: downloadSingleObject
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadSingle'
      responses:
        '200':
          description: Download request was successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /download/multi:
    post:
      summary: Queues multiple objects to be downloaded by AIS. Requires either an object_map or object_list request body field.
      operationId: downloadMultipleObjects
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadMulti'
      responses:
        '200':
          description: Download request consisting of multiple objects were successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /download/list:
    post:
      summary: Queues for download all the objects that can be constructed from url= base + prefix + n + suffix. Where n is known as the key space. start <= n <= end. The key space can be modified using the step and digit_count modifiers in the request body.
      operationId: downloadObjectList
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadList'
      responses:
        '200':
          description: Download list request was successfully processed and objects were successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    DownloadAdmin:
      type: object
      properties:
        link:
          type: string
          description: URL of the object that was added to the download queue
          example: "http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz"
        bucket:
          type: string
          description: bucket where the download was supposed to be saved to
          example: "testbucket"
        objname:
          type: string
          description: name of the object the download was supposed to be saved as
          example: "dataset.gz"
      required:
        - bucket
        - link
        - objname
    DownloadSingle:
      type: object
      properties:
        link:
          type: string
          description: URL of where the object will be downloaded from.
          example: "http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz"
        bucket:
          type: string
          description: bucket where the download will be saved to
          example: "testbucket"
        objname:
          type: string
          description: name of the object the download will be saved as. If no objname is provided, then the objname will be the last element in the URL's path.
          example: "dataset.gz"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value (string). These values are used as the header values for when AIS actually makes the GET request to download the object from the link.
      required:
        - bucket
        - link
    DownloadList:
      type: object
      properties:
        bucket:
          type: string
          description: Bucket where the downloaded objects will be saved to.
          example: "testbucket"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value (string). These values are used as the header values for when AIS actually makes the GET request to download each object.
        base:
          type: string
          description: The base URL of the object that will be used to formulate the download url
          example: "http://yann.lecun.com/exdb/mnist/"
        prefix:
          type: string
          description: Is the first thing appended to the base string to formulate the download url
          example: "train-images-idx"
        suffix:
          type: string
          description: the suffix follows the object index to formulate the download url of the object being downloaded.
          example: "-ubyte.gz"
        start:
          type: integer
          description: The index of the first object in the object space to be downloaded. Defualt is 0 if not provided.
          example: "5"
          minimum: 0
        end:
          type: integer
          description: The upper bound of the range of objects to be downloaded in the object space. Defualt is 0 if not provided.
          example: "75"
          minimum: 0
        step:
          type: integer
          description: Used to download every nth object (where n = step) in the object space starting from start and ending at end. Default is 1 if not provided.
          example: "5"
          minimum: 1
        digit_count:
          type: integer
          description: Used to ensure that each key coforms to n digits (where n = digit_count). Basically prepends as many 0s as needed. i.e. if n == 4, then the key 45 will be 0045 and if n == 5, then key 45 wil be 00045. Not providing this field will mean no 0s are prepended to any index in the key space.
          example: "4"
          minimum: 0
      required:
        - bucket
        - base  
    DownloadMulti:
      type: object
      properties:
        bucket:
          type: string
          description: Bucket where the downloaded objects will be saved to.
          example: "testbucket"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value(string). These values are used as the header values for when AIS actually makes the GET request to download the object.
        object_map:
          type: object
          description: JSON object where the key (string) is the objname the object will be saved as and value (string) is a URL pointing to some file.
        object_list:
          type: array
          description: JSON array where each item is a URL (string) pointing to some file. The objname for each file will be the last element in the URL's path. 
          items:
            type: string
            example: http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
          minItems: 1
      required:
        - bucket
    SortSpec:
      type: object
      properties:
        bucket:
          type: string
          description: Name of the bucket from where data is read and written
          example: "dsort-bucket"
        local:
          type: boolean
          description: Describes if the bucket is local or not
          default: false
        extension:
          type: string
          example: ".tar"
        shard_size:
          type: integer
          format: int64
        input_format:
          $ref: '#/components/schemas/NameTemplate'
        output_format:
          $ref: '#/components/schemas/NameTemplate'
        algorithm:
          type: object
          properties:
            kind:
              type: string
              enum: [alphanumeric, content, shuffle, none]
            decreasing:
              type: boolean
              default: false
            seed:
              type: string
              default: ""
            extension:
              type: string
              default: ""
              description: Content of the file with provided extension will be used as sorting key
            format_type:
              type: string
              enum: [int, float, string]
              default: string
              description: Format type describes how the content of the file should be interpreted
        max_mem_usage:
          type: string
          example: "10%"
        extract_concurrency_limit:
          type: integer
          minimum: 0
          default: 10
          example: 50
        create_concurrency_limit:
          type: integer
          minimum: 0
          default: 10
          example: 50
        extended_metrics:
          type: boolean
          description: Determines if metrics should include extened statistics
      required:
        - bucket
        - extension
        - input_format
        - output_format
    MapOfMetrics: # <---- dictionary
      type: object
      additionalProperties:
        type: object
        properties:
          local_extraction:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              seen_count:
                type: integer
              to_seen_count:
                type: integer
              extracted_count:
                type: integer
              extracted_size:
                type: integer
                format: int64
              extracted_record_count:
                type: integer
              extracted_to_disk_count:
                type: integer
              extracted_to_disk_size:
                type: integer
                format: int64
              single_shard_stats:
                $ref: '#/components/schemas/TimeStats'
          meta_sorting:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              sent_stats:
                $ref: '#/components/schemas/TimeStats'
              recv_stats:
                $ref: '#/components/schemas/TimeStats'
          shard_creation:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              to_create:
                type: integer
              created_count:
                type: integer
              moved_shard_count:
                type: integer
              req_stats:
                $ref: '#/components/schemas/TimeStats'
              resp_stats:
                $ref: '#/components/schemas/TimeStats'
              single_shard_stats:
                $ref: '#/components/schemas/TimeStats'
          aborted:
            type: boolean
            description: Specifies if the distributed sort has been aborted or not.
    NameTemplate:
      type: string
      example: "prefix-{0001..0999}-suffix"
    TimeStats:
      type: object
      properties:
        total_ms:
          type: integer
        count:
          type: integer
        min_ms:
          type: integer
        max_ms:
          type: integer
        avg_ms:
          type: integer
    InputParameters:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Actions'
        name:
          type: string
        value:
          oneOf:
            - $ref: '#/components/schemas/ListParameters'
            - $ref: '#/components/schemas/RangeParameters'
            - $ref: '#/components/schemas/BucketProps'
            - $ref: '#/components/schemas/ObjectPropertiesRequestParams'
    Actions:
      type: string
      enum: [evict, rename, createlb, destroylb, renamelb, setprops, prefetch, delete, setconfig, shutdown, rebalance, listobjects, enable, disable, remove, add]
    ListParameters:
      properties:
        deadline:
          type: string
        wait:
          type: boolean
        objnames:
          type: array
          items:
            type: string
      required:
          - objnames
    RangeParameters:
      properties:
        deadline:
          type: string
        wait:
          type: boolean
        prefix:
          type: string
        regex:
          type: string
        range:
          type: string
      required:
        - regex
        - prefix
        - range
    BucketProps:
      properties:
        cloud_provider:
          type: string
        next_tier_url:
          type: string
        read_policy:
          type: string
        write_policy:
          type: string
        cksum_config:
          $ref: '#/components/schemas/BucketPropsCksum'
    BucketPropsCksum:
      type: object
      properties:
        checksum: 
          type: string
          enum: [xxhash, none, inherit]
          default: inherit
        validate_checksum_cold_get:
          type: boolean
        validate_checksum_warm_get:
          type: boolean
        enable_read_range_checksum:
          type: boolean
    BucketNames:
      type: object
      properties:
        cloud:
          type: array
          items:
            type: string
        local:
          type: array
          items:
            type: string
    ObjectPropertiesRequestParams:
      type: object
      properties:
        props:
          type: string
        time_format:
          $ref: '#/components/schemas/TimeFormat'
        prefix:
          type: string
        pagemarker:
          type: string
        pagesize:
          type: string
    ObjectProperties:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
          format: int64
        ctime:
          type: string
        checksum:
          type: string
        type:
          type: string
        atime:
          type: string
        bucket:
          type: string
        version:
          type: string
        iscached:
          type: string
        targetURL:
          type: string
    ObjectPropertyList:
      type: object
      properties:
        pagemarker:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ObjectProperties'
    ObjectPropertyTypes:
      type: string
      enum: [size, ctime, checksum, atime, bucket, version, iscached, targetURL]
    TimeFormat:
      type: string
      enum: [ANSIC, UnixDate, RubyDate, RFC822, RFC822Z, RFC850, RFC1123, RFC1123Z, RFC3339, RFC3339Nano, Kitchen, Stamp, StampMilli, StampMicro, StampNano]
    CloudProvider:
      type: string
      enum: [ais, aws, gcp]
    Headers:
      type: string
      enum: [CloudProvider, Versioning, NextTierURL, ReadPolicy, WritePolicy, ObjVersion, ObjSize, ObjCksumType, ObjCksumVal]
    RWPolicy:
      type: string
      enum: [cloud, next_tier]
    Version:
      type: string
      enum: [all, cloud, local, none]
    Snode:
      type: object
      properties:
        daemon_id:
          type: string
        public_net:
          $ref: '#/components/schemas/NetInfo'
        intra_control_net:
          $ref: '#/components/schemas/NetInfo'
        intra_data_net:
          $ref: '#/components/schemas/NetInfo'
    NetInfo:
      type: object
      properties:
        node_ip_addr:
          type: string
        daemon_port:
          type: string
        direct_url:
          type: string
    GetWhat:
      type: string
      enum:
        - smap
        - config
        - stats
        - xaction
        - mountpaths
        - daemoninfo
        - bucketmd
    GetProps:
      type: string
      enum: [rebalance, prefetch]
    ClusterMap:
      type: object
      properties:
        tmap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Snode'
        pmap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Snode'
        proxy_si:
          $ref: '#/components/schemas/Snode'
        version:
          type: integer
          format: int64
    DaemonCoreStatistics:
      type: object
      properties:
        numget:
          type: integer
          format: int64
        numput:
          type: integer
          format: int64
        numpost:
          type: integer
          format: int64
        numdelete:
          type: integer
          format: int64
        numrename:
          type: integer
          format: int64
        numlist:
          type: integer
          format: int64
        getlatency:
          type: integer
          format: int64
        putlatency:
          type: integer
          format: int64
        listlatency:
          type: integer
          format: int64
        numerr:
          type: integer
          format: int64
    TargetCoreStatistics:
      allOf:
        - $ref: '#/components/schemas/DaemonCoreStatistics'
        - type: object
          properties:
            numcoldget:
              type: integer
              format: int64
            bytesloaded:
              type: integer
              format: int64
            bytesevicted:
              type: integer
              format: int64
            filesevicted:
              type: integer
              format: int64
            numsentfiles:
              type: integer
              format: int64
            numsentbytes:
              type: integer
              format: int64
            numrecvfiles:
              type: integer
              format: int64
            numrecvbytes:
              type: integer
              format: int64
            numprefetch:
              type: integer
              format: int64
            bytesprefetched:
              type: integer
              format: int64
            numvchanged:
              type: integer
              format: int64
            bytesvchanged:
              type: integer
              format: int64
            numbadchecksum:
              type: integer
              format: int64
            bytesbadchecksum:
              type: integer
              format: int64
    FileSystemCapacity:
      type: object
      properties:
        used:
          type: integer
          format: int64
        avail:
          type: integer
          format: int64
        usedpct:
          type: integer
          format: int32
    TargetStatistics:
      type: object
      properties:
        core:
          $ref: '#/components/schemas/TargetCoreStatistics'
        capacity:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FileSystemCapacity'
        cpuidle:
          type: string
        disk:
          type: object
          additionalProperties:
            type: string
    ClusterStatistics:
      type: object
      properties:
        proxy:
          $ref: '#/components/schemas/DaemonCoreStatistics'
        target:
          $ref: '#/components/schemas/TargetStatistics'
    ProxyConfiguration:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        passthru:
          type: boolean
    KeepAliveTrackerConfiguration:
      type: object
      properties:
        interval:
          type: string
        name:
          type: string
        max:
          type: string
        factor:
          type: integer
          format: int32
    DaemonConfiguration:
      type: object
      properties:
        confdir:
          type: string
        cloudprovider:
          type: string
        cloud_buckets:
          type: string
        local_buckets:
          type: string
        log:
          type: object
          properties:
            logdir:
              type: string
            loglevel:
              type: string
            logmaxsize:
              type: integer
              format: int64
            logmaxtotal:
              type: integer
              format: int64
        periodic:
          type: object
          properties:
            stats_time:
              type: string
            retry_sync_time:
              type: string
        timeout:
          type: object
          properties:
            default_timeout:
              type: string
            default_long_timeout:
              type: string
            max_keepalive:
              type: string
            proxy_ping:
              type: string
            cplane_operation:
              type: string
            send_file_time:
              type: string
            startup_time:
              type: string
        proxyconfig:
          type: object
          properties:
            primary:
              $ref: '#/components/schemas/ProxyConfiguration'
            original:
              $ref: '#/components/schemas/ProxyConfiguration'
        lru_config:
          type: object
          properties:
            lowwm:
              type: integer
              format: int32
            highwm:
              type: integer
              format: int32
            atime_cache_max:
              type: integer
              format: int64
            dont_evict_time:
              type: string
            capacity_upd_time:
              type: string
            lru_enabled:
              type: boolean
        rebalance_conf:
          type: object
          properties:
            startup_delay_time:
              type: string
            dest_retry_time:
              type: string
            rebalancing_enabled:
              type: boolean
        cksum_config:
          type: object
          properties:
            checksum:
              type: string
            validate_checksum_cold_get:
              type: boolean
            validate_checksum_warm_get:
              type: boolean
            enable_read_range_checksum:
              type: boolean
        version_config:
          type: object
          properties:
            validate_version_warm_get:
              type: boolean
            versioning:
              type: string
        fspaths:
          type: object
          additionalProperties:
            type: string
        test_fspaths:
          type: object
          properties:
            root:
              type: string
            count:
              type: integer
              format: int32
            instance:
              type: integer
              format: int32
        netconfig:
          type: object
          properties:
            ipv4:
              type: string
            l4:
              type: object
              properties:
                proto:
                  type: string
                port:
                    type: string
            http:
              type: object
              properties:
                max_num_targets:
                  type: integer
                  format: int32
                use_http2:
                  type: boolean
                use_https:
                  type: boolean
                use_as_proxy:
                  type: boolean
                server_certificate:
                  type: string
                server_key:
                  type: string
        fskeeper:
          type: object
          properties:
            fs_check_time:
              type: string
            offline_fs_check_time:
              type: string
            fskeeper_enabled:
              type: boolean
        auth:
          type: object
          properties:
            secret:
              type: string
            enabled:
              type: boolean
            creddir:
              type: string
        keepalivetracker:
          type: object
          properties:
            proxy:
              $ref: '#/components/schemas/KeepAliveTrackerConfiguration'
            target:
              $ref: '#/components/schemas/KeepAliveTrackerConfiguration'
        callstats:
          type: object
          properties:
            request_included:
              type: array
              items:
                type: string
            factor:
              type: number
              format: float
    XactionDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startTime:
          type: string
        endTime:
          type: string
        status:
          type: string
    RebalanceTargetStatistics:
      type: object
      properties:
        xactionDetails:
          type: array
          items:
            $ref: '#/components/schemas/XactionDetails'
        numSentFiles:
          type: integer
          format: int64
        numSentBytes:
          type: integer
          format: int64
        numRecvFiles:
          type: integer
          format: int64
        numRecvBytes:
          type: integer
          format: int64
    PrefetchTargetStatistics:
      type: object
      properties:
        xactionDetails:
          type: array
          items:
            $ref: '#/components/schemas/XactionDetails'
        numFilesPrefetched:
          type: integer
          format: int64
        numBytesPrefetched:
          type: integer
          format: int64
    RebalanceClusterStatistics:
      type: object
      properties:
        kind:
          type: string
        target:
          type: object
          additionalProperties:
              $ref: '#/components/schemas/RebalanceTargetStatistics'
    PrefetchClusterStatistics:
      type: object
      properties:
        kind:
          type: string
        target:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PrefetchTargetStatistics'
